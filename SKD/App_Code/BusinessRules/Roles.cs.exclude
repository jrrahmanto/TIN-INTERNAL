using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.IO;

/// <summary>
/// Summary description for Roles
/// </summary>
public class Roles
{
	
    private static List<string> listOfPage = new List<string>();

    public static List<string> GetFiles(string path)
    {
        List<string> listOfPage = new List<string>();
        if (Directory.Exists(path))
        {
            string[] subdirectoryEntries = Directory.GetDirectories(path);
            foreach (string subdirectory in subdirectoryEntries)
            {
                string[] fileEntries = Directory.GetFiles(subdirectory);

                foreach (string fileName in fileEntries)
                {
                    if (fileName.Contains(".aspx") && !fileName.Contains(".cs"))
                    {
                        listOfPage.Add(fileName.Replace(path + "\\", "").Replace("\\", " - "));
                    }
                }

                string[] subsubDirectory = Directory.GetDirectories(subdirectory);

                foreach (string item in subsubDirectory)
                {
                    string[] fileEntries2 = Directory.GetFiles(item);

                    foreach (string item2 in fileEntries2)
                    {
                        if (item2.Contains(".aspx") && !item2.Contains(".cs"))
                        {
                            if (!item2.Contains("Default.aspx") || !item2.Contains("ErrorPage.aspx")
                                || !item2.Contains("Login.aspx") || !item2.Contains("MainPage.aspx")
                                || !item2.Contains("EntryAccessPage.aspx"))
                            {
                                listOfPage.Add(item2.Replace(path + "\\", "").Replace("\\", " - "));
                            }
                           
                        }
                    }
                }
            }
        }

        return listOfPage;
    }

    const int HowDeepToScan = 4;

    public static List<string> ProcessDir(string sourceDir, int recursionLvl, string path)
    {
        if (recursionLvl <= HowDeepToScan)
        {
            // Process the list of files found in the directory.
            string[] fileEntries = Directory.GetFiles(sourceDir);
            if (recursionLvl > 0)
            {
                foreach (string fileName in fileEntries)
                {
                    if (fileName.Contains(".aspx") && !fileName.Contains(".cs"))
                    {
                        string aaaa = fileName.Replace(path + "\\", "").Replace("\\","/");
                        aaaa.Replace("\\","/");
                        listOfPage.Add("/" + aaaa);
                    }
                }
            }
           

            // Recurse into subdirectories of this directory.
            string[] subdirEntries = Directory.GetDirectories(sourceDir);
            foreach (string subdir in subdirEntries)
                // Do not iterate through reparse points
                if ((File.GetAttributes(subdir) &
                     FileAttributes.ReparsePoint) !=
                         FileAttributes.ReparsePoint)

                    ProcessDir(subdir, recursionLvl + 1, path);
        }

        return listOfPage;
    }

    public static GroupData.pageDataTable GetPageData(string path)
    {
        GroupData.pageDataTable dt = new GroupData.pageDataTable();
        dt.Clear();
        dt.AcceptChanges();
        List<string> listOfPage = ProcessDir(path, 0,path);
        foreach (string item in listOfPage)
        {
            dt.AddpageRow(item, "Checker");
            dt.AddpageRow(item, "Maker");
            dt.AddpageRow(item, "Viewer");
        }
        dt.DefaultView.ToTable(true, "pagename");
        dt.AcceptChanges();
        return dt;
       
    }


  

}
